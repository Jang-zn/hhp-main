spring:
  application:
    name: hhplus
  profiles:
    active: test

# SpringDoc/Swagger 설정
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /api-docs
    display-request-duration: true
    display-operation-id: false
    tags-sorter: alpha
    operations-sorter: alpha
  show-actuator: false

# Actuator 설정 (모니터링용)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,threaddump,configprops
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      simple:
        enabled: true


---
# JPA + MySQL 환경 (일반적인 모든 환경)
spring.config.activate.on-profile: local, dev, prod

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
    driver-class-name: com.mysql.cj.jdbc.Driver
  logging:
    level:
      org.hibernate.SQL: DEBUG
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
  # Retry 설정 (동시성 제어용)
  retry:
    enabled: true
  # Redis 설정 (분산 락)
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      timeout: 2000
  
  # Kafka 설정 (KRaft 모드 - ZooKeeper 불필요)
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: hhplus-server
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "kr.hhplus.be.server.domain.event"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
  
  # Async 스레드풀 설정
  task:
    execution:
      pool:
        core-size: 5          # 기본 스레드 수
        max-size: 20          # 최대 스레드 수
        queue-capacity: 50    # 큐 용량
        keep-alive: 60s       # 유휴 스레드 유지 시간
      thread-name-prefix: "Spring-Async-"
    scheduling:
      pool:
        size: 5               # 스케줄링 스레드풀 크기
      thread-name-prefix: "Spring-Scheduling-"

# Messaging 설정 (STEP 15/16용)
messaging:
  type: redis                    # redis, kafka, inmemory
  redis:
    stream:
      consumer-group: "hhplus-consumers"
      max-pending: 1000
      block-time: 5000          # 5초 블로킹
    pub-sub:
      timeout: 3000             # 3초 타임아웃
  retry:
    max-attempts: 3
    backoff:
      initial: 1000             # 1초
      multiplier: 2.0
      max: 30000               # 30초

---
# TestContainers 환경 (통합 테스트용)
spring.config.activate.on-profile: integration-test

spring:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  retry:
    enabled: false  # 통합 테스트에서는 재시도 비활성화

---
# 테스트 환경 (Repository 테스트 - TestContainers 사용)
spring.config.activate.on-profile: test

spring:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  retry:
    enabled: false  # 테스트에서는 재시도 비활성화

---
# 단위 테스트 환경 (Controller, Service 등 - JPA 비활성화)
spring.config.activate.on-profile: unit

spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration
      - org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration
  jpa:
    hibernate:
      ddl-auto: none
  datasource:
    enabled: false
  retry:
    enabled: false

---
# Repository 단위 테스트 환경 (TestContainers 사용)
spring.config.activate.on-profile: unit-repository

spring:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  retry:
    enabled: false  # 테스트에서는 재시도 비활성화

---
# 통합 테스트 환경 (TestContainers 사용)
spring.config.activate.on-profile: integration

spring:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  retry:
    enabled: false  # 통합 테스트에서는 재시도 비활성화

# Messaging 설정 - 통합 테스트에서는 실제 EventPort + Consumer 파이프라인 사용
messaging:
  type: redis

